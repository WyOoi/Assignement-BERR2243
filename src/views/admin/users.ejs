<div class="container-fluid py-4">
  <div class="row">
    <div class="col-12">
      <div class="card mb-4">
        <div class="card-header pb-0 d-flex justify-content-between align-items-center">
          <h6>Manage Users</h6>
          <div>
            <a href="/admin" class="btn btn-sm btn-secondary">
              <i class="fas fa-arrow-left me-1"></i> Back to Dashboard
            </a>
          </div>
        </div>
        <div class="card-body px-0 pt-0 pb-2">
          <div class="p-4">
            <!-- User Stats -->
            <div class="row mb-4">
              <div class="col-xl-4 col-md-6 mb-4">
                <div class="card border-left-primary shadow h-100 py-2 stats-card">
                  <div class="card-body">
                    <div class="row no-gutters align-items-center">
                      <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                          Total Users</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800"><%= users.length %></div>
                      </div>
                      <div class="col-auto">
                        <i class="fas fa-users fa-2x text-gray-300"></i>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="col-xl-4 col-md-6 mb-4">
                <div class="card border-left-success shadow h-100 py-2 stats-card">
                  <div class="card-body">
                    <div class="row no-gutters align-items-center">
                      <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                          Drivers</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                          <%= users.filter(user => user.role === 'driver').length %>
                        </div>
                      </div>
                      <div class="col-auto">
                        <i class="fas fa-car fa-2x text-gray-300"></i>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="col-xl-4 col-md-6 mb-4">
                <div class="card border-left-info shadow h-100 py-2 stats-card">
                  <div class="card-body">
                    <div class="row no-gutters align-items-center">
                      <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                          Passengers</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                          <%= users.filter(user => user.role === 'passenger').length %>
                        </div>
                      </div>
                      <div class="col-auto">
                        <i class="fas fa-user fa-2x text-gray-300"></i>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            <!-- Users Table -->
            <div class="card shadow mb-4 stats-card">
              <div class="card-header py-3 d-flex justify-content-between align-items-center">
                <h6 class="m-0 font-weight-bold text-primary">All Users</h6>
                <div>
                  <button class="btn btn-sm btn-primary" id="refreshUserList">
                    <i class="fas fa-sync-alt me-1"></i> Refresh
                  </button>
                </div>
              </div>
              <div class="card-body">
                <div class="table-responsive">
                  <table class="table table-bordered admin-table" id="usersTable" width="100%" cellspacing="0">
                    <thead>
                      <tr>
                        <th>User</th>
                        <th>Contact</th>
                        <th>Details</th>
                        <th>Role</th>
                        <th>Joined</th>
                        <th>Actions</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% if (users && users.length > 0) { %>
                        <% users.forEach(user => { %>
                          <tr data-id="<%= user.id %>" data-role="<%= user.role.toLowerCase() %>">
                            <td>
                              <div class="d-flex px-2 py-1">
                                <div class="avatar avatar-sm me-3">
                                  <img src="<%= user.profilePicture || '/images/default-profile.png' %>" alt="<%= user.name %>" class="rounded-circle">
                                </div>
                                <div class="d-flex flex-column justify-content-center">
                                  <h6 class="mb-0 text-sm"><%= user.name %></h6>
                                  <p class="text-xs text-secondary mb-0"><%= user.email %></p>
                                </div>
                              </div>
                            </td>
                            <td>
                              <p class="text-xs font-weight-bold mb-0"><%= user.phone || 'N/A' %></p>
                            </td>
                            <td>
                              <% if (user.role.toLowerCase() === 'driver') { %>
                                <p class="text-xs mb-0">Car: <%= user.carModel || 'N/A' %></p>
                                <p class="text-xs mb-0">Plate: <%= user.carPlateNumber || 'N/A' %></p>
                              <% } %>
                              <p class="text-xs mb-0">Student ID: <%= user.studentId || 'N/A' %></p>
                              <p class="text-xs mb-0">Faculty: <%= user.faculty || 'N/A' %></p>
                            </td>
                            <td>
                              <span class="badge bg-<%= user.role.toLowerCase() === 'driver' ? 'info' : 'primary' %>">
                                <%= user.role %>
                              </span>
                              <% if (user.role.toLowerCase() === 'driver') { %>
                                <span class="badge bg-<%= user.status === 'available' ? 'success' : (user.status === 'busy' ? 'warning' : 'secondary') %>">
                                  <%= user.status || 'N/A' %>
                                </span>
                              <% } %>
                            </td>
                            <td>
                              <span class="text-secondary text-xs font-weight-bold"><%= user.joined %></span>
                            </td>
                            <td class="align-middle">
                              <button class="btn btn-sm btn-info view-user-btn" data-id="<%= user.id %>" data-role="<%= user.role.toLowerCase() %>">
                                <i class="fas fa-eye"></i>
                              </button>
                              <button class="btn btn-sm btn-primary edit-user-btn" data-id="<%= user.id %>" data-role="<%= user.role.toLowerCase() %>">
                                <i class="fas fa-edit"></i>
                              </button>
                              <button class="btn btn-sm btn-warning edit-role-btn" data-id="<%= user.id %>" data-role="<%= user.role.toLowerCase() %>">
                                <i class="fas fa-user-edit"></i>
                              </button>
                              <button class="btn btn-sm btn-danger delete-user-btn" data-id="<%= user.id %>" data-role="<%= user.role.toLowerCase() %>">
                                <i class="fas fa-trash"></i>
                              </button>
                            </td>
                          </tr>
                        <% }); %>
                      <% } else { %>
                        <tr>
                          <td colspan="6" class="text-center">No users found</td>
                        </tr>
                      <% } %>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- User Details Modal -->
<div class="modal fade" id="userDetailsModal" tabindex="-1" aria-labelledby="userDetailsModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="userDetailsModalLabel">User Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="userDetailsContent">
        <div class="text-center">
          <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
          </div>
          <p>Loading user details...</p>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<!-- Delete User Confirmation Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteUserModalLabel">Confirm Delete</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Are you sure you want to delete this user? This action cannot be undone.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete User</button>
      </div>
    </div>
  </div>
</div>

<!-- Edit User Role Modal -->
<div class="modal fade" id="editUserRoleModal" tabindex="-1" aria-labelledby="editUserRoleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editUserRoleModalLabel">Change User Role</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="editRoleForm">
          <div class="mb-3">
            <label for="userRole" class="form-label">Select Role</label>
            <select class="form-select" id="userRole" required>
              <option value="passenger">Passenger</option>
              <option value="driver">Driver</option>
            </select>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="saveRoleBtn">Save Changes</button>
      </div>
    </div>
  </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="editUserForm">
          <input type="hidden" id="editUserId">
          <input type="hidden" id="editUserRole">
          
          <div class="row mb-3">
            <div class="col-md-6">
              <label for="editName" class="form-label">Name</label>
              <input type="text" class="form-control" id="editName" required>
            </div>
            <div class="col-md-6">
              <label for="editEmail" class="form-label">Email</label>
              <input type="email" class="form-control" id="editEmail" required>
            </div>
          </div>
          
          <div class="row mb-3">
            <div class="col-md-6">
              <label for="editPhone" class="form-label">Phone</label>
              <input type="text" class="form-control" id="editPhone">
            </div>
            <div class="col-md-6">
              <label for="editStudentId" class="form-label">Student ID</label>
              <input type="text" class="form-control" id="editStudentId">
            </div>
          </div>
          
          <div class="row mb-3">
            <div class="col-md-6">
              <label for="editFaculty" class="form-label">Faculty</label>
              <input type="text" class="form-control" id="editFaculty">
            </div>
          </div>
          
          <!-- Driver-specific fields -->
          <div id="driverFields" style="display: none;">
            <hr>
            <h6>Driver Information</h6>
            <div class="row mb-3">
              <div class="col-md-6">
                <label for="editCarModel" class="form-label">Car Model</label>
                <input type="text" class="form-control" id="editCarModel">
              </div>
              <div class="col-md-6">
                <label for="editCarPlate" class="form-label">Car Plate Number</label>
                <input type="text" class="form-control" id="editCarPlate">
              </div>
            </div>
            <div class="row mb-3">
              <div class="col-md-6">
                <label for="editLicenseNumber" class="form-label">License Number</label>
                <input type="text" class="form-control" id="editLicenseNumber">
              </div>
              <div class="col-md-6">
                <label for="editStatus" class="form-label">Status</label>
                <select class="form-select" id="editStatus">
                  <option value="available">Available</option>
                  <option value="busy">Busy</option>
                  <option value="offline">Offline</option>
                </select>
              </div>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="saveUserBtn">Save Changes</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize DataTable for users table
    if (typeof $.fn !== 'undefined' && $.fn.DataTable) {
      $('#usersTable').DataTable({
        responsive: true,
        order: [[4, 'desc']], // Sort by joined date by default
        language: {
          search: "_INPUT_",
          searchPlaceholder: "Search users..."
        }
      });
    }
    
    // Delete user functionality
    let userToDelete = null;
    let userToDeleteRole = null;
    
    document.querySelectorAll('.delete-user-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        userToDelete = this.getAttribute('data-id');
        userToDeleteRole = this.getAttribute('data-role');
        const userName = this.closest('tr').querySelector('h6').textContent;
        document.getElementById('deleteUserModal').querySelector('.modal-body').innerHTML = 
          `Are you sure you want to delete user <strong>${userName}</strong>? This action cannot be undone.`;
        $('#deleteUserModal').modal('show');
      });
    });
    
    document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
      if (userToDelete) {
        // Show loading state
        this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Deleting...';
        this.disabled = true;
        
        deleteUser(userToDelete, userToDeleteRole);
      }
    });
    
    // Edit user role functionality
    let userToEdit = null;
    let currentRole = null;
    let userRoleToEdit = null;
    
    document.querySelectorAll('.edit-role-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        userToEdit = this.getAttribute('data-id');
        currentRole = this.getAttribute('data-role');
        document.getElementById('userRole').value = currentRole;
        $('#editUserRoleModal').modal('show');
      });
    });
    
    document.getElementById('saveRoleBtn').addEventListener('click', function() {
      if (userToEdit) {
        // Show loading state
        this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...';
        this.disabled = true;
        
        const newRole = document.getElementById('userRole').value;
        if (newRole !== currentRole) {
          updateUserRole(userToEdit, newRole);
        } else {
          $('#editUserRoleModal').modal('hide');
          this.innerHTML = 'Save Changes';
          this.disabled = false;
        }
      }
    });
    
    // Edit user functionality
    document.querySelectorAll('.edit-user-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        const userId = this.getAttribute('data-id');
        const userRole = this.getAttribute('data-role');
        
        // Show loading state in modal
        document.getElementById('editUserForm').innerHTML = `
          <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2">Loading user data...</p>
          </div>
        `;
        
        $('#editUserModal').modal('show');
        loadUserForEditing(userId, userRole);
      });
    });
    
    document.getElementById('saveUserBtn').addEventListener('click', function() {
      // Validate form
      const form = document.getElementById('editUserForm');
      if (!form.checkValidity()) {
        form.reportValidity();
        return;
      }
      
      // Show loading state
      this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...';
      this.disabled = true;
      
      saveUserChanges();
    });
    
    // View user details functionality
    document.querySelectorAll('.view-user-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        const userId = this.getAttribute('data-id');
        const userRole = this.getAttribute('data-role');
        showUserDetails(userId, userRole);
      });
    });
    
    // Refresh button functionality
    document.getElementById('refreshUserList').addEventListener('click', function() {
      // Show loading state
      this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Refreshing...';
      this.disabled = true;
      
      window.location.reload();
    });
  });
  
  function showUserDetails(userId, role) {
    const detailsContent = document.getElementById('userDetailsContent');
    detailsContent.innerHTML = `
      <div class="text-center">
        <div class="spinner-border text-primary" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
        <p>Loading user details...</p>
      </div>
    `;
    
    $('#userDetailsModal').modal('show');
    
    // Fetch user details from API
    fetch(`/admin/api/users/${userId}?role=${role}`)
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
      })
      .then(user => {
        if (user) {
          // Format joined date
          const joinedDate = user.joined_at ? new Date(user.joined_at).toLocaleDateString() : 'N/A';
          
          // Build user details HTML
          let detailsHtml = `
            <div class="row">
              <div class="col-md-4 text-center mb-4">
                <img src="${user.profilePicture || '/images/default-profile.png'}" alt="${user.name}" class="rounded-circle img-fluid mb-3" style="max-width: 150px;">
                <h5>${user.name}</h5>
                <span class="badge bg-${role === 'driver' ? 'info' : 'primary'} mb-2">${role.charAt(0).toUpperCase() + role.slice(1)}</span>
              </div>
              <div class="col-md-8">
                <div class="row mb-3">
                  <div class="col-md-6">
                    <h6 class="text-muted">Contact Information</h6>
                    <p><strong>Email:</strong> ${user.email}</p>
                    <p><strong>Phone:</strong> ${user.phone || 'Not provided'}</p>
                  </div>
                  <div class="col-md-6">
                    <h6 class="text-muted">Account Information</h6>
                    <p><strong>Student ID:</strong> ${user.studentId || 'Not provided'}</p>
                    <p><strong>Faculty:</strong> ${user.faculty || 'Not provided'}</p>
                    <p><strong>Joined:</strong> ${joinedDate}</p>
                  </div>
                </div>
          `;
          
          // Add driver-specific information
          if (role === 'driver') {
            detailsHtml += `
              <div class="row mb-3">
                <div class="col-12">
                  <h6 class="text-muted">Driver Information</h6>
                </div>
                <div class="col-md-6">
                  <p><strong>Car Model:</strong> ${user.carModel || 'Not provided'}</p>
                  <p><strong>License Plate:</strong> ${user.carPlateNumber || 'Not provided'}</p>
                </div>
                <div class="col-md-6">
                  <p><strong>License Number:</strong> ${user.license_number || 'Not provided'}</p>
                  <p><strong>Status:</strong> <span class="badge bg-${user.status === 'available' ? 'success' : (user.status === 'busy' ? 'warning' : 'secondary')}">${user.status || 'Unknown'}</span></p>
                </div>
              </div>
              <div class="row">
                <div class="col-12">
                  <h6 class="text-muted">Ratings</h6>
                  <p><strong>Average Rating:</strong> ${user.average_rating ? user.average_rating.toFixed(1) + ' / 5.0' : 'No ratings yet'}</p>
                  <p><strong>Total Ratings:</strong> ${user.rating_count || 0}</p>
                </div>
              </div>
            `;
          }
          
          // Close the row and column divs
          detailsHtml += `
              </div>
            </div>
          `;
          
          detailsContent.innerHTML = detailsHtml;
        } else {
          detailsContent.innerHTML = `<p class="text-center text-danger">Failed to load user details.</p>`;
        }
      })
      .catch(error => {
        console.error('Error fetching user details:', error);
        detailsContent.innerHTML = `
          <div class="alert alert-danger">
            <h5>Error Loading User Details</h5>
            <p>${error.message}</p>
          </div>
        `;
      });
  }
  
  function loadUserForEditing(userId, role) {
    fetch(`/admin/api/users/${userId}?role=${role}`)
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
      })
      .then(user => {
        if (user) {
          // Build the form HTML
          let formHtml = `
            <input type="hidden" id="editUserId" value="${userId}">
            <input type="hidden" id="editUserRole" value="${role}">
            
            <div class="row mb-3">
              <div class="col-md-6">
                <label for="editName" class="form-label">Name</label>
                <input type="text" class="form-control" id="editName" value="${user.name || ''}" required>
              </div>
              <div class="col-md-6">
                <label for="editEmail" class="form-label">Email</label>
                <input type="email" class="form-control" id="editEmail" value="${user.email || ''}" required>
              </div>
            </div>
            
            <div class="row mb-3">
              <div class="col-md-6">
                <label for="editPhone" class="form-label">Phone</label>
                <input type="text" class="form-control" id="editPhone" value="${user.phone || ''}">
              </div>
              <div class="col-md-6">
                <label for="editStudentId" class="form-label">Student ID</label>
                <input type="text" class="form-control" id="editStudentId" value="${user.studentId || ''}">
              </div>
            </div>
            
            <div class="row mb-3">
              <div class="col-md-6">
                <label for="editFaculty" class="form-label">Faculty</label>
                <input type="text" class="form-control" id="editFaculty" value="${user.faculty || ''}">
              </div>
            </div>
          `;
          
          // Add driver-specific fields if applicable
          if (role === 'driver') {
            formHtml += `
              <hr>
              <h6>Driver Information</h6>
              <div class="row mb-3">
                <div class="col-md-6">
                  <label for="editCarModel" class="form-label">Car Model</label>
                  <input type="text" class="form-control" id="editCarModel" value="${user.carModel || ''}">
                </div>
                <div class="col-md-6">
                  <label for="editCarPlate" class="form-label">Car Plate Number</label>
                  <input type="text" class="form-control" id="editCarPlate" value="${user.carPlateNumber || ''}">
                </div>
              </div>
              <div class="row mb-3">
                <div class="col-md-6">
                  <label for="editLicenseNumber" class="form-label">License Number</label>
                  <input type="text" class="form-control" id="editLicenseNumber" value="${user.license_number || ''}">
                </div>
                <div class="col-md-6">
                  <label for="editStatus" class="form-label">Status</label>
                  <select class="form-select" id="editStatus">
                    <option value="available" ${user.status === 'available' ? 'selected' : ''}>Available</option>
                    <option value="busy" ${user.status === 'busy' ? 'selected' : ''}>Busy</option>
                    <option value="offline" ${user.status === 'offline' ? 'selected' : ''}>Offline</option>
                  </select>
                </div>
              </div>
            `;
          }
          
          // Set the form HTML
          document.getElementById('editUserForm').innerHTML = formHtml;
        } else {
          document.getElementById('editUserForm').innerHTML = `
            <div class="alert alert-danger">
              <h5>Error</h5>
              <p>Failed to load user details.</p>
            </div>
          `;
        }
      })
      .catch(error => {
        console.error('Error fetching user details:', error);
        document.getElementById('editUserForm').innerHTML = `
          <div class="alert alert-danger">
            <h5>Error Loading User Data</h5>
            <p>${error.message}</p>
          </div>
        `;
      });
  }
  
  function saveUserChanges() {
    const userId = document.getElementById('editUserId').value;
    const role = document.getElementById('editUserRole').value;
    
    // Prepare user data
    const userData = {
      name: document.getElementById('editName').value,
      email: document.getElementById('editEmail').value,
      phone: document.getElementById('editPhone').value,
      studentId: document.getElementById('editStudentId').value,
      faculty: document.getElementById('editFaculty').value
    };
    
    // Add driver-specific fields if applicable
    if (role === 'driver') {
      userData.carModel = document.getElementById('editCarModel').value;
      userData.carPlateNumber = document.getElementById('editCarPlate').value;
      userData.license_number = document.getElementById('editLicenseNumber').value;
      userData.status = document.getElementById('editStatus').value;
    }
    
    // Send update request
    fetch(`/admin/users/${userId}?role=${role}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(userData)
    })
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      if (data.success) {
        // Show success message
        const modalBody = document.querySelector('#editUserModal .modal-body');
        modalBody.insertAdjacentHTML('afterbegin', `
          <div class="alert alert-success alert-dismissible fade show" role="alert">
            User updated successfully!
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        `);
        
        // Reset button state
        const saveBtn = document.getElementById('saveUserBtn');
        saveBtn.innerHTML = 'Save Changes';
        saveBtn.disabled = false;
        
        // Reload page after a delay
        setTimeout(() => {
          window.location.reload();
        }, 1500);
      } else {
        throw new Error(data.message || 'Failed to update user');
      }
    })
    .catch(error => {
      console.error('Error updating user:', error);
      
      // Show error message
      const modalBody = document.querySelector('#editUserModal .modal-body');
      modalBody.insertAdjacentHTML('afterbegin', `
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          Error: ${error.message}
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      `);
      
      // Reset button state
      const saveBtn = document.getElementById('saveUserBtn');
      saveBtn.innerHTML = 'Save Changes';
      saveBtn.disabled = false;
    });
  }
  
  function deleteUser(userId, role) {
    fetch(`/admin/users/${userId}?role=${role}`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      if (data.success) {
        // Show success message
        const alertHtml = `
          <div class="alert alert-success alert-dismissible fade show" role="alert">
            User deleted successfully!
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        `;
        document.querySelector('.card-body').insertAdjacentHTML('afterbegin', alertHtml);
        
        // Remove the row from the table
        const row = document.querySelector(`tr[data-id="${userId}"]`);
        if (row) {
          // If using DataTable, remove through API
          if ($.fn.DataTable.isDataTable('#usersTable')) {
            $('#usersTable').DataTable().row(row).remove().draw();
          } else {
            row.remove();
          }
        }
        
        // Update user count in stats cards
        const totalUsers = document.querySelector('.text-primary + .h5');
        if (totalUsers) {
          totalUsers.textContent = parseInt(totalUsers.textContent) - 1;
        }
        
        if (role === 'driver') {
          const driverCount = document.querySelector('.text-success + .h5');
          if (driverCount) {
            driverCount.textContent = parseInt(driverCount.textContent) - 1;
          }
        } else {
          const passengerCount = document.querySelector('.text-info + .h5');
          if (passengerCount) {
            passengerCount.textContent = parseInt(passengerCount.textContent) - 1;
          }
        }
        
        // Hide the modal
        $('#deleteUserModal').modal('hide');
      } else {
        throw new Error(data.message || 'Failed to delete user');
      }
    })
    .catch(error => {
      console.error('Error deleting user:', error);
      
      // Show error in modal
      const modalBody = document.querySelector('#deleteUserModal .modal-body');
      modalBody.innerHTML = `
        <div class="alert alert-danger mb-0">
          <h5>Error</h5>
          <p>${error.message}</p>
        </div>
      `;
      
      // Reset button state
      const confirmBtn = document.getElementById('confirmDeleteBtn');
      confirmBtn.innerHTML = 'Delete User';
      confirmBtn.disabled = false;
    });
  }
  
  function updateUserRole(userId, newRole) {
    fetch(`/admin/users/${userId}/update-role`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ newRole })
    })
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      if (data.success) {
        // Show success message
        const modalBody = document.querySelector('#editUserRoleModal .modal-body');
        modalBody.insertAdjacentHTML('afterbegin', `
          <div class="alert alert-success alert-dismissible fade show" role="alert">
            User role updated successfully!
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        `);
        
        // Reset button state
        const saveBtn = document.getElementById('saveRoleBtn');
        saveBtn.innerHTML = 'Save Changes';
        saveBtn.disabled = false;
        
        // Reload page after a delay
        setTimeout(() => {
          window.location.reload();
        }, 1500);
      } else {
        throw new Error(data.message || 'Failed to update user role');
      }
    })
    .catch(error => {
      console.error('Error updating user role:', error);
      
      // Show error message
      const modalBody = document.querySelector('#editUserRoleModal .modal-body');
      modalBody.insertAdjacentHTML('afterbegin', `
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          Error: ${error.message}
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      `);
      
      // Reset button state
      const saveBtn = document.getElementById('saveRoleBtn');
      saveBtn.innerHTML = 'Save Changes';
      saveBtn.disabled = false;
    });
  }
</script> 